{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, onAuthStateChanged, signInAnonymously, signInWithCustomToken } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\nexport const useFirebase = () => {\n  _s();\n  const [db, setDb] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    if (!firebaseConfig.apiKey) {\n      console.error('Firebase configuration is missing.');\n      setIsLoading(false);\n      return;\n    }\n    try {\n      const app = initializeApp(firebaseConfig);\n      const firestore = getFirestore(app);\n      const auth = getAuth(app);\n      setDb(firestore);\n      onAuthStateChanged(auth, async user => {\n        if (user) {\n          setUserId(user.uid);\n        } else {\n          await signInAnonymously(auth);\n        }\n        setIsLoading(false);\n      });\n    } catch (error) {\n      console.error(\"Firebase initialization failed:\", error);\n      setIsLoading(false);\n    }\n  }, []);\n  return {\n    db,\n    userId,\n    isLoading\n  };\n};\n_s(useFirebase, \"uhGzN+DkEu+sCpyUw4I/fjLNQGI=\");","map":{"version":3,"names":["useState","useEffect","initializeApp","getAuth","onAuthStateChanged","signInAnonymously","signInWithCustomToken","getFirestore","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","useFirebase","_s","db","setDb","userId","setUserId","isLoading","setIsLoading","console","error","app","firestore","auth","user","uid"],"sources":["C:/Users/ragha/OneDrive/Desktop/resume builder/ai-resume-generator/client/src/hooks/useFirebase.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth, onAuthStateChanged, signInAnonymously, signInWithCustomToken } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n};\r\n\r\nexport const useFirebase = () => {\r\n    const [db, setDb] = useState(null);\r\n    const [userId, setUserId] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (!firebaseConfig.apiKey) {\r\n            console.error('Firebase configuration is missing.');\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n        try {\r\n            const app = initializeApp(firebaseConfig);\r\n            const firestore = getFirestore(app);\r\n            const auth = getAuth(app);\r\n            \r\n            setDb(firestore);\r\n            \r\n            onAuthStateChanged(auth, async (user) => {\r\n                if (user) {\r\n                    setUserId(user.uid);\r\n                } else {\r\n                    await signInAnonymously(auth);\r\n                }\r\n                setIsLoading(false);\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Firebase initialization failed:\", error);\r\n            setIsLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    return { db, userId, isLoading };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAEC,qBAAqB,QAAQ,eAAe;AACrG,SAASC,YAAY,QAAQ,oBAAoB;AAEjD,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B;EAC9CC,UAAU,EAAEH,OAAO,CAACC,GAAG,CAACG,8BAA8B;EACtDC,SAAS,EAAEL,OAAO,CAACC,GAAG,CAACK,6BAA6B;EACpDC,aAAa,EAAEP,OAAO,CAACC,GAAG,CAACO,iCAAiC;EAC5DC,iBAAiB,EAAET,OAAO,CAACC,GAAG,CAACS,sCAAsC;EACrEC,KAAK,EAAEX,OAAO,CAACC,GAAG,CAACW;AACvB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAClC,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZ,IAAI,CAACO,cAAc,CAACC,MAAM,EAAE;MACxBsB,OAAO,CAACC,KAAK,CAAC,oCAAoC,CAAC;MACnDF,YAAY,CAAC,KAAK,CAAC;MACnB;IACJ;IACA,IAAI;MACA,MAAMG,GAAG,GAAG/B,aAAa,CAACM,cAAc,CAAC;MACzC,MAAM0B,SAAS,GAAG3B,YAAY,CAAC0B,GAAG,CAAC;MACnC,MAAME,IAAI,GAAGhC,OAAO,CAAC8B,GAAG,CAAC;MAEzBP,KAAK,CAACQ,SAAS,CAAC;MAEhB9B,kBAAkB,CAAC+B,IAAI,EAAE,MAAOC,IAAI,IAAK;QACrC,IAAIA,IAAI,EAAE;UACNR,SAAS,CAACQ,IAAI,CAACC,GAAG,CAAC;QACvB,CAAC,MAAM;UACH,MAAMhC,iBAAiB,CAAC8B,IAAI,CAAC;QACjC;QACAL,YAAY,CAAC,KAAK,CAAC;MACvB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvDF,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEL,EAAE;IAAEE,MAAM;IAAEE;EAAU,CAAC;AACpC,CAAC;AAACL,EAAA,CAjCWD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}